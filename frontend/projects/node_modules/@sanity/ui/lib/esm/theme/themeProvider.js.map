{
  "version": 3,
  "sources": ["../../../src/theme/themeProvider.tsx"],
  "sourcesContent": ["import React, {useMemo} from 'react'\nimport {ThemeProvider as StyledThemeProvider} from 'styled-components'\nimport {DEFAULT_THEME_LAYER} from './defaults'\nimport {ThemeColorSchemeKey, ThemeColorName} from './lib/theme'\nimport {ThemeContext} from './themeContext'\nimport {RootTheme, Theme, ThemeContextValue} from './types'\n\n/**\n * @public\n */\nexport interface ThemeProviderProps {\n  children?: React.ReactNode\n  scheme?: ThemeColorSchemeKey\n  theme: RootTheme\n  tone?: ThemeColorName\n}\n\n/**\n * @public\n */\nexport function ThemeProvider(props: ThemeProviderProps): React.ReactElement {\n  const {children, scheme = 'light', theme: rootTheme, tone = 'default'} = props\n\n  const theme: Theme = useMemo(() => {\n    const {color: rootColor, layer: rootLayer, ...restTheme} = rootTheme\n    const colorScheme = rootColor[scheme] || rootColor.light\n    const color = colorScheme[tone] || colorScheme.default\n    const layer = rootLayer || DEFAULT_THEME_LAYER\n\n    return {sanity: {...restTheme, color, layer}}\n  }, [rootTheme, scheme, tone])\n\n  const value: ThemeContextValue = useMemo(\n    () => ({\n      version: 0.0,\n      theme: rootTheme,\n      scheme,\n      tone,\n    }),\n    [rootTheme, scheme, tone]\n  )\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <StyledThemeProvider theme={theme}>{children}</StyledThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAgBO,uBAAuB,OAA+C;AAC3E,QAAM,EAAC,UAAU,SAAS,SAAS,OAAO,WAAW,OAAO,cAAa;AAEzE,QAAM,QAAe,QAAQ,MAAM;AACjC,UAA2D,gBAApD,SAAO,WAAW,OAAO,cAA2B,IAAb,sBAAa,IAAb,CAAvC,SAAkB;AACzB,UAAM,cAAc,UAAU,WAAW,UAAU;AACnD,UAAM,QAAQ,YAAY,SAAS,YAAY;AAC/C,UAAM,QAAQ,aAAa;AAE3B,WAAO,EAAC,QAAQ,iCAAI,YAAJ,EAAe,OAAO;AAAA,KACrC,CAAC,WAAW,QAAQ;AAEvB,QAAM,QAA2B,QAC/B,MAAO;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA,IACP;AAAA,IACA;AAAA,MAEF,CAAC,WAAW,QAAQ;AAGtB,SACE,oCAAC,aAAa,UAAd;AAAA,IAAuB;AAAA,KACrB,oCAAC,qBAAD;AAAA,IAAqB;AAAA,KAAe;AAAA;",
  "names": []
}
